---
# vim:ff=unix ts=2 sw=2 ai expandtab

- name: Provision a django server
  hosts: django
  remote_user: root
  tasks:

    - name: install packages
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      with_items:
        - python-pip
        - python3-dev
        - uwsgi

    - name: install system python packages
      pip:
        name: "{{ item }}"
        state: latest
      with_items:
        - virtualenv
        - virtualenvwrapper

    - name: create project subdir in parent dir
      file:
        state: directory
        path: "/home/{{ user }}/{{ item }}/{{ git_dest }}"
      with_items:
        - log
        - static
        - media

    - name: git clone django repo
      git:
        repo: "{{ git_repo }}"
        version: "{{ git_branch }}"
        dest: "/home/{{ user }}/git/{{ git_dest }}"
        accept_hostkey: yes

    - name: create virtualenv and install requirements
      become_user: "{{ user }}"
      pip:
        virtualenv_python: python3
        virtualenv: "/home/{{ user }}/env/{{ git_dest }}"
        requirements: "/home/{{ user }}/git/{{ git_dest }}/requirements.txt"

    - name: migrate django database
      become_user: "{{ user }}"
      django_manage:
        command: migrate --fake-initial
        app_path: "/home/{{ user }}/git/{{ git_dest }}"
        settings: "{{ site_name }}.settings.{{ env }}"
        virtualenv: "/home/{{ user }}/env/{{ git_dest }}"

    - name: collect django static
      become_user: "{{ user }}"
      django_manage:
        command: collectstatic --no-input
        app_path: "/home/{{ user }}/git/{{ git_dest }}"
        settings: "{{ site_name }}.settings.{{ env }}"
        virtualenv: "/home/{{ user }}/env/{{ git_dest }}"

    - name: chown home
      file:
        state: directory
        path: "/home/{{ user }}"
        recurse: yes
        owner: "{{ user }}"
        group: "{{ user }}"
